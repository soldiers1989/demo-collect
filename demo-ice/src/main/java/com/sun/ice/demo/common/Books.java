// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `common.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.sun.ice.demo.common;

public class Books implements java.lang.Cloneable, java.io.Serializable
{
    public String bookName;

    public String
    getBookName()
    {
        return bookName;
    }

    public void
    setBookName(String _bookName)
    {
        bookName = _bookName;
    }

    public float bookPrice;

    public float
    getBookPrice()
    {
        return bookPrice;
    }

    public void
    setBookPrice(float _bookPrice)
    {
        bookPrice = _bookPrice;
    }

    public Books()
    {
        bookName = "";
    }

    public Books(String bookName, float bookPrice)
    {
        this.bookName = bookName;
        this.bookPrice = bookPrice;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        Books _r = null;
        if(rhs instanceof Books)
        {
            _r = (Books)rhs;
        }

        if(_r != null)
        {
            if(bookName != _r.bookName)
            {
                if(bookName == null || _r.bookName == null || !bookName.equals(_r.bookName))
                {
                    return false;
                }
            }
            if(bookPrice != _r.bookPrice)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::common::Books");
        __h = IceInternal.HashUtil.hashAdd(__h, bookName);
        __h = IceInternal.HashUtil.hashAdd(__h, bookPrice);
        return __h;
    }

    public Books
    clone()
    {
        Books c = null;
        try
        {
            c = (Books)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(bookName);
        __os.writeFloat(bookPrice);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        bookName = __is.readString();
        bookPrice = __is.readFloat();
    }

    static public void
    __write(IceInternal.BasicStream __os, Books __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public Books
    __read(IceInternal.BasicStream __is, Books __v)
    {
        if(__v == null)
        {
             __v = new Books();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final Books __nullMarshalValue = new Books();

    public static final long serialVersionUID = 174487094L;
}
