// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `proxy.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.sun.ice.demo.proxy;

/**
 * Provides type-specific helper functions.
 **/
public final class MyInterface3PrxHelper extends Ice.ObjectPrxHelperBase implements MyInterface3Prx
{
    private static final String __getName_name = "getName";

    public String getName()
        throws com.sun.ice.demo.common.IllegProxyException
    {
        return getName(null, false);
    }

    public String getName(java.util.Map<String, String> __ctx)
        throws com.sun.ice.demo.common.IllegProxyException
    {
        return getName(__ctx, true);
    }

    private String getName(java.util.Map<String, String> __ctx, boolean __explicitCtx)
        throws com.sun.ice.demo.common.IllegProxyException
    {
        __checkTwowayOnly(__getName_name);
        return end_getName(begin_getName(__ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_getName()
    {
        return begin_getName(null, false, false, null);
    }

    public Ice.AsyncResult begin_getName(java.util.Map<String, String> __ctx)
    {
        return begin_getName(__ctx, true, false, null);
    }

    public Ice.AsyncResult begin_getName(Ice.Callback __cb)
    {
        return begin_getName(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_getName(java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_getName(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_getName(Callback_MyInterface_getName __cb)
    {
        return begin_getName(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_getName(java.util.Map<String, String> __ctx, Callback_MyInterface_getName __cb)
    {
        return begin_getName(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_getName(IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_getName(null, false, false, __responseCb, __userExceptionCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_getName(IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getName(null, false, false, __responseCb, __userExceptionCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_getName(java.util.Map<String, String> __ctx, 
                                         IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_getName(__ctx, true, false, __responseCb, __userExceptionCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_getName(java.util.Map<String, String> __ctx, 
                                         IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getName(__ctx, true, false, __responseCb, __userExceptionCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_getName(java.util.Map<String, String> __ctx, 
                                          boolean __explicitCtx, 
                                          boolean __synchronous, 
                                          IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getName(__ctx, __explicitCtx, __synchronous, 
                             new IceInternal.Functional_TwowayCallbackArg1UE<String>(__responseCb, __userExceptionCb, __exceptionCb, __sentCb)
                                 {
                                     public final void __completed(Ice.AsyncResult __result)
                                     {
                                         MyInterface3PrxHelper.__getName_completed(this, __result);
                                     }
                                 });
    }

    private Ice.AsyncResult begin_getName(java.util.Map<String, String> __ctx, 
                                          boolean __explicitCtx, 
                                          boolean __synchronous, 
                                          IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__getName_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__getName_name, __cb);
        try
        {
            __result.prepare(__getName_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            __result.writeEmptyParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public String end_getName(Ice.AsyncResult __iresult)
        throws com.sun.ice.demo.common.IllegProxyException
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __getName_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(com.sun.ice.demo.common.IllegProxyException __ex)
                {
                    throw __ex;
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            String __ret;
            __ret = __is.readString();
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __getName_completed(Ice.TwowayCallbackArg1UE<String> __cb, Ice.AsyncResult __result)
    {
        com.sun.ice.demo.proxy.MyInterfacePrx __proxy = (com.sun.ice.demo.proxy.MyInterfacePrx)__result.getProxy();
        String __ret = null;
        try
        {
            __ret = __proxy.end_getName(__result);
        }
        catch(Ice.UserException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __setName_name = "setName";

    public void setName(String name)
    {
        setName(name, null, false);
    }

    public void setName(String name, java.util.Map<String, String> __ctx)
    {
        setName(name, __ctx, true);
    }

    private void setName(String name, java.util.Map<String, String> __ctx, boolean __explicitCtx)
    {
        end_setName(begin_setName(name, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_setName(String name)
    {
        return begin_setName(name, null, false, false, null);
    }

    public Ice.AsyncResult begin_setName(String name, java.util.Map<String, String> __ctx)
    {
        return begin_setName(name, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_setName(String name, Ice.Callback __cb)
    {
        return begin_setName(name, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_setName(String name, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_setName(name, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_setName(String name, Callback_MyInterface_setName __cb)
    {
        return begin_setName(name, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_setName(String name, java.util.Map<String, String> __ctx, Callback_MyInterface_setName __cb)
    {
        return begin_setName(name, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_setName(String name, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_setName(name, null, false, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_setName(String name, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_setName(name, null, false, false, __responseCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_setName(String name, 
                                         java.util.Map<String, String> __ctx, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_setName(name, __ctx, true, false, __responseCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_setName(String name, 
                                         java.util.Map<String, String> __ctx, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_setName(name, __ctx, true, false, __responseCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_setName(String name, 
                                          java.util.Map<String, String> __ctx, 
                                          boolean __explicitCtx, 
                                          boolean __synchronous, 
                                          IceInternal.Functional_VoidCallback __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_setName(name, 
                             __ctx, 
                             __explicitCtx, 
                             __synchronous, 
                             new IceInternal.Functional_OnewayCallback(__responseCb, __exceptionCb, __sentCb));
    }

    private Ice.AsyncResult begin_setName(String name, 
                                          java.util.Map<String, String> __ctx, 
                                          boolean __explicitCtx, 
                                          boolean __synchronous, 
                                          IceInternal.CallbackBase __cb)
    {
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__setName_name, __cb);
        try
        {
            __result.prepare(__setName_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            __os.writeString(name);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_setName(Ice.AsyncResult __iresult)
    {
        __end(__iresult, __setName_name);
    }

    private static final String __getMyInterface_name = "getMyInterface";

    public MyInterfacePrx getMyInterface()
        throws com.sun.ice.demo.common.ProxyException
    {
        return getMyInterface(null, false);
    }

    public MyInterfacePrx getMyInterface(java.util.Map<String, String> __ctx)
        throws com.sun.ice.demo.common.ProxyException
    {
        return getMyInterface(__ctx, true);
    }

    private MyInterfacePrx getMyInterface(java.util.Map<String, String> __ctx, boolean __explicitCtx)
        throws com.sun.ice.demo.common.ProxyException
    {
        __checkTwowayOnly(__getMyInterface_name);
        return end_getMyInterface(begin_getMyInterface(__ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_getMyInterface()
    {
        return begin_getMyInterface(null, false, false, null);
    }

    public Ice.AsyncResult begin_getMyInterface(java.util.Map<String, String> __ctx)
    {
        return begin_getMyInterface(__ctx, true, false, null);
    }

    public Ice.AsyncResult begin_getMyInterface(Ice.Callback __cb)
    {
        return begin_getMyInterface(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_getMyInterface(java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_getMyInterface(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_getMyInterface(Callback_StudentInterface_getMyInterface __cb)
    {
        return begin_getMyInterface(null, false, false, __cb);
    }

    public Ice.AsyncResult begin_getMyInterface(java.util.Map<String, String> __ctx, Callback_StudentInterface_getMyInterface __cb)
    {
        return begin_getMyInterface(__ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_getMyInterface(IceInternal.Functional_GenericCallback1<MyInterfacePrx> __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_getMyInterface(null, false, false, __responseCb, __userExceptionCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_getMyInterface(IceInternal.Functional_GenericCallback1<MyInterfacePrx> __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getMyInterface(null, false, false, __responseCb, __userExceptionCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_getMyInterface(java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_GenericCallback1<MyInterfacePrx> __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_getMyInterface(__ctx, true, false, __responseCb, __userExceptionCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_getMyInterface(java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_GenericCallback1<MyInterfacePrx> __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getMyInterface(__ctx, true, false, __responseCb, __userExceptionCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_getMyInterface(java.util.Map<String, String> __ctx, 
                                                 boolean __explicitCtx, 
                                                 boolean __synchronous, 
                                                 IceInternal.Functional_GenericCallback1<MyInterfacePrx> __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_getMyInterface(__ctx, __explicitCtx, __synchronous, 
                                    new IceInternal.Functional_TwowayCallbackArg1UE<com.sun.ice.demo.proxy.MyInterfacePrx>(__responseCb, __userExceptionCb, __exceptionCb, __sentCb)
                                        {
                                            public final void __completed(Ice.AsyncResult __result)
                                            {
                                                MyInterface3PrxHelper.__getMyInterface_completed(this, __result);
                                            }
                                        });
    }

    private Ice.AsyncResult begin_getMyInterface(java.util.Map<String, String> __ctx, 
                                                 boolean __explicitCtx, 
                                                 boolean __synchronous, 
                                                 IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__getMyInterface_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__getMyInterface_name, __cb);
        try
        {
            __result.prepare(__getMyInterface_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            __result.writeEmptyParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public MyInterfacePrx end_getMyInterface(Ice.AsyncResult __iresult)
        throws com.sun.ice.demo.common.ProxyException
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __getMyInterface_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(com.sun.ice.demo.common.ProxyException __ex)
                {
                    throw __ex;
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            IceInternal.BasicStream __is = __result.startReadParams();
            MyInterfacePrx __ret;
            __ret = MyInterfacePrxHelper.__read(__is);
            __result.endReadParams();
            return __ret;
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __getMyInterface_completed(Ice.TwowayCallbackArg1UE<MyInterfacePrx> __cb, Ice.AsyncResult __result)
    {
        com.sun.ice.demo.proxy.StudentInterfacePrx __proxy = (com.sun.ice.demo.proxy.StudentInterfacePrx)__result.getProxy();
        MyInterfacePrx __ret = null;
        try
        {
            __ret = __proxy.end_getMyInterface(__result);
        }
        catch(Ice.UserException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response(__ret);
    }

    private static final String __setMyInterface_name = "setMyInterface";

    public void setMyInterface(MyInterfacePrx myInterface)
        throws com.sun.ice.demo.common.ProxyException
    {
        setMyInterface(myInterface, null, false);
    }

    public void setMyInterface(MyInterfacePrx myInterface, java.util.Map<String, String> __ctx)
        throws com.sun.ice.demo.common.ProxyException
    {
        setMyInterface(myInterface, __ctx, true);
    }

    private void setMyInterface(MyInterfacePrx myInterface, java.util.Map<String, String> __ctx, boolean __explicitCtx)
        throws com.sun.ice.demo.common.ProxyException
    {
        __checkTwowayOnly(__setMyInterface_name);
        end_setMyInterface(begin_setMyInterface(myInterface, __ctx, __explicitCtx, true, null));
    }

    public Ice.AsyncResult begin_setMyInterface(MyInterfacePrx myInterface)
    {
        return begin_setMyInterface(myInterface, null, false, false, null);
    }

    public Ice.AsyncResult begin_setMyInterface(MyInterfacePrx myInterface, java.util.Map<String, String> __ctx)
    {
        return begin_setMyInterface(myInterface, __ctx, true, false, null);
    }

    public Ice.AsyncResult begin_setMyInterface(MyInterfacePrx myInterface, Ice.Callback __cb)
    {
        return begin_setMyInterface(myInterface, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_setMyInterface(MyInterfacePrx myInterface, java.util.Map<String, String> __ctx, Ice.Callback __cb)
    {
        return begin_setMyInterface(myInterface, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_setMyInterface(MyInterfacePrx myInterface, Callback_StudentInterface_setMyInterface __cb)
    {
        return begin_setMyInterface(myInterface, null, false, false, __cb);
    }

    public Ice.AsyncResult begin_setMyInterface(MyInterfacePrx myInterface, java.util.Map<String, String> __ctx, Callback_StudentInterface_setMyInterface __cb)
    {
        return begin_setMyInterface(myInterface, __ctx, true, false, __cb);
    }

    public Ice.AsyncResult begin_setMyInterface(MyInterfacePrx myInterface, 
                                                IceInternal.Functional_VoidCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_setMyInterface(myInterface, null, false, false, __responseCb, __userExceptionCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_setMyInterface(MyInterfacePrx myInterface, 
                                                IceInternal.Functional_VoidCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_setMyInterface(myInterface, null, false, false, __responseCb, __userExceptionCb, __exceptionCb, __sentCb);
    }

    public Ice.AsyncResult begin_setMyInterface(MyInterfacePrx myInterface, 
                                                java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_VoidCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb)
    {
        return begin_setMyInterface(myInterface, __ctx, true, false, __responseCb, __userExceptionCb, __exceptionCb, null);
    }

    public Ice.AsyncResult begin_setMyInterface(MyInterfacePrx myInterface, 
                                                java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_VoidCallback __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_setMyInterface(myInterface, __ctx, true, false, __responseCb, __userExceptionCb, __exceptionCb, __sentCb);
    }

    private Ice.AsyncResult begin_setMyInterface(MyInterfacePrx myInterface, 
                                                 java.util.Map<String, String> __ctx, 
                                                 boolean __explicitCtx, 
                                                 boolean __synchronous, 
                                                 IceInternal.Functional_VoidCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb)
    {
        return begin_setMyInterface(myInterface, __ctx, __explicitCtx, __synchronous, 
                                    new IceInternal.Functional_TwowayCallbackVoidUE(__responseCb, __userExceptionCb, __exceptionCb, __sentCb)
                                        {
                                            public final void __completed(Ice.AsyncResult __result)
                                            {
                                                MyInterface3PrxHelper.__setMyInterface_completed(this, __result);
                                            }
                                        });
    }

    private Ice.AsyncResult begin_setMyInterface(MyInterfacePrx myInterface, 
                                                 java.util.Map<String, String> __ctx, 
                                                 boolean __explicitCtx, 
                                                 boolean __synchronous, 
                                                 IceInternal.CallbackBase __cb)
    {
        __checkAsyncTwowayOnly(__setMyInterface_name);
        IceInternal.OutgoingAsync __result = getOutgoingAsync(__setMyInterface_name, __cb);
        try
        {
            __result.prepare(__setMyInterface_name, Ice.OperationMode.Normal, __ctx, __explicitCtx, __synchronous);
            IceInternal.BasicStream __os = __result.startWriteParams(Ice.FormatType.DefaultFormat);
            MyInterfacePrxHelper.__write(__os, myInterface);
            __result.endWriteParams();
            __result.invoke();
        }
        catch(Ice.Exception __ex)
        {
            __result.abort(__ex);
        }
        return __result;
    }

    public void end_setMyInterface(Ice.AsyncResult __iresult)
        throws com.sun.ice.demo.common.ProxyException
    {
        IceInternal.OutgoingAsync __result = IceInternal.OutgoingAsync.check(__iresult, this, __setMyInterface_name);
        try
        {
            if(!__result.__wait())
            {
                try
                {
                    __result.throwUserException();
                }
                catch(com.sun.ice.demo.common.ProxyException __ex)
                {
                    throw __ex;
                }
                catch(Ice.UserException __ex)
                {
                    throw new Ice.UnknownUserException(__ex.ice_name(), __ex);
                }
            }
            __result.readEmptyParams();
        }
        finally
        {
            if(__result != null)
            {
                __result.cacheMessageBuffers();
            }
        }
    }

    static public void __setMyInterface_completed(Ice.TwowayCallbackVoidUE __cb, Ice.AsyncResult __result)
    {
        com.sun.ice.demo.proxy.StudentInterfacePrx __proxy = (com.sun.ice.demo.proxy.StudentInterfacePrx)__result.getProxy();
        try
        {
            __proxy.end_setMyInterface(__result);
        }
        catch(Ice.UserException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.LocalException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        catch(Ice.SystemException __ex)
        {
            __cb.exception(__ex);
            return;
        }
        __cb.response();
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static MyInterface3Prx checkedCast(Ice.ObjectPrx __obj)
    {
        return checkedCastImpl(__obj, ice_staticId(), MyInterface3Prx.class, MyInterface3PrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static MyInterface3Prx checkedCast(Ice.ObjectPrx __obj, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __ctx, ice_staticId(), MyInterface3Prx.class, MyInterface3PrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static MyInterface3Prx checkedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return checkedCastImpl(__obj, __facet, ice_staticId(), MyInterface3Prx.class, MyInterface3PrxHelper.class);
    }

    /**
     * Contacts the remote server to verify that a facet of the object implements this type.
     * Raises a local exception if a communication error occurs.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @param __ctx The Context map to send with the invocation.
     * @return A proxy for this type, or null if the object does not support this type.
     **/
    public static MyInterface3Prx checkedCast(Ice.ObjectPrx __obj, String __facet, java.util.Map<String, String> __ctx)
    {
        return checkedCastImpl(__obj, __facet, __ctx, ice_staticId(), MyInterface3Prx.class, MyInterface3PrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @return A proxy for this type.
     **/
    public static MyInterface3Prx uncheckedCast(Ice.ObjectPrx __obj)
    {
        return uncheckedCastImpl(__obj, MyInterface3Prx.class, MyInterface3PrxHelper.class);
    }

    /**
     * Downcasts the given proxy to this type without contacting the remote server.
     * @param __obj The untyped proxy.
     * @param __facet The name of the desired facet.
     * @return A proxy for this type.
     **/
    public static MyInterface3Prx uncheckedCast(Ice.ObjectPrx __obj, String __facet)
    {
        return uncheckedCastImpl(__obj, __facet, MyInterface3Prx.class, MyInterface3PrxHelper.class);
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::proxy::MyInterface",
        "::proxy::MyInterface3",
        "::proxy::StudentInterface"
    };

    /**
     * Provides the Slice type ID of this type.
     * @return The Slice type ID.
     **/
    public static String ice_staticId()
    {
        return __ids[2];
    }

    public static void __write(IceInternal.BasicStream __os, MyInterface3Prx v)
    {
        __os.writeProxy(v);
    }

    public static MyInterface3Prx __read(IceInternal.BasicStream __is)
    {
        Ice.ObjectPrx proxy = __is.readProxy();
        if(proxy != null)
        {
            MyInterface3PrxHelper result = new MyInterface3PrxHelper();
            result.__copyFrom(proxy);
            return result;
        }
        return null;
    }

    public static final long serialVersionUID = 0L;
}
