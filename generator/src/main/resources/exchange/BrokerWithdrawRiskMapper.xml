<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.juzix.jungle.exchange.dao.BrokerWithdrawRiskMapper">
  <resultMap id="BaseResultMap" type="com.juzix.jungle.exchange.entity.BrokerWithdrawRisk">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="broker_code" jdbcType="VARCHAR" property="brokerCode" />
    <result column="coin" jdbcType="VARCHAR" property="coin" />
    <result column="min_volume" jdbcType="DECIMAL" property="minVolume" />
    <result column="max_volume" jdbcType="DECIMAL" property="maxVolume" />
    <result column="audit_required_volume" jdbcType="DECIMAL" property="auditRequiredVolume" />
    <result column="daily_volume" jdbcType="DECIMAL" property="dailyVolume" />
    <result column="daily_times" jdbcType="INTEGER" property="dailyTimes" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from broker_withdraw_risk
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.juzix.jungle.exchange.entity.BrokerWithdrawRisk">
    insert into broker_withdraw_risk (id, broker_code, coin, 
      min_volume, max_volume, audit_required_volume, 
      daily_volume, daily_times, create_time, 
      create_user_id, update_time, update_user_id
      )
    values (#{id,jdbcType=INTEGER}, #{brokerCode,jdbcType=VARCHAR}, #{coin,jdbcType=VARCHAR}, 
      #{minVolume,jdbcType=DECIMAL}, #{maxVolume,jdbcType=DECIMAL}, #{auditRequiredVolume,jdbcType=DECIMAL}, 
      #{dailyVolume,jdbcType=DECIMAL}, #{dailyTimes,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserId,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=INTEGER}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.juzix.jungle.exchange.entity.BrokerWithdrawRisk">
    update broker_withdraw_risk
    set broker_code = #{brokerCode,jdbcType=VARCHAR},
      coin = #{coin,jdbcType=VARCHAR},
      min_volume = #{minVolume,jdbcType=DECIMAL},
      max_volume = #{maxVolume,jdbcType=DECIMAL},
      audit_required_volume = #{auditRequiredVolume,jdbcType=DECIMAL},
      daily_volume = #{dailyVolume,jdbcType=DECIMAL},
      daily_times = #{dailyTimes,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, broker_code, coin, min_volume, max_volume, audit_required_volume, daily_volume, 
    daily_times, create_time, create_user_id, update_time, update_user_id
    from broker_withdraw_risk
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, broker_code, coin, min_volume, max_volume, audit_required_volume, daily_volume, 
    daily_times, create_time, create_user_id, update_time, update_user_id
    from broker_withdraw_risk
  </select>
</mapper>