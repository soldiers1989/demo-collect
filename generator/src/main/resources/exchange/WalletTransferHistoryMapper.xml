<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.juzix.jungle.exchange.dao.WalletTransferHistoryMapper">
  <resultMap id="BaseResultMap" type="com.juzix.jungle.exchange.entity.WalletTransferHistory">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="coin" jdbcType="VARCHAR" property="coin" />
    <result column="volume" jdbcType="DECIMAL" property="volume" />
    <result column="tx_hash" jdbcType="VARCHAR" property="txHash" />
    <result column="tx_time" jdbcType="TIMESTAMP" property="txTime" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from wallet_transfer_history
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.juzix.jungle.exchange.entity.WalletTransferHistory">
    insert into wallet_transfer_history (id, coin, volume, 
      tx_hash, tx_time, status, 
      create_user_id, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{coin,jdbcType=VARCHAR}, #{volume,jdbcType=DECIMAL}, 
      #{txHash,jdbcType=VARCHAR}, #{txTime,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{createUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.juzix.jungle.exchange.entity.WalletTransferHistory">
    update wallet_transfer_history
    set coin = #{coin,jdbcType=VARCHAR},
      volume = #{volume,jdbcType=DECIMAL},
      tx_hash = #{txHash,jdbcType=VARCHAR},
      tx_time = #{txTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, coin, volume, tx_hash, tx_time, status, create_user_id, create_time, update_time
    from wallet_transfer_history
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, coin, volume, tx_hash, tx_time, status, create_user_id, create_time, update_time
    from wallet_transfer_history
  </select>
</mapper>